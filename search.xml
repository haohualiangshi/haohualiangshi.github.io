<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[es5-ver]]></title>
    <url>%2F2017%2F07%2F04%2Fes5-ver%2F</url>
    <content type="text"><![CDATA[变量、作用域变量 js的变量是松散类型的，即可以用来保存任何类型的数据 变量分为5种基本数据类型和1种复杂类型的： 基本类型：Undefined、Null、Boolean、Number和String 复杂类型：Object，Object本质上是由一组无序的名值对组成 在es 5中是可以使用typeof操作符进行数据类型的检测，其返回值：undefined、boolean、string、number、object、function。 在使用数值转换时的三种方法 Number()函数的转换规则，在传入值不同下返回; boolean值的true和false直接转换为1和0 数值直接返回传入值 null值返回0 undefined返回NaN 字符串： 字符串全为数字；将该字符串转为十进制；eg;”123”转为123，“0123”转为123 如果字符串包含浮点格式“1.5”转为浮点值1.5，同样忽略前边的0；但是如果不是标准的浮点格式；会转为NaN; 如果字符串是标准的十六进制格式“0xaf”则转为十进制175 字符串为空转为0 其他不符合该规则的字符串转为NaN 对象：传入值是对象先调用valueof()方法；依照上述规则转换]]></content>
      <categories>
        <category>js教程总结</category>
      </categories>
      <tags>
        <tag>js</tag>
        <tag>变量</tag>
        <tag>作用域</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[blogOfHexo]]></title>
    <url>%2F2017%2F06%2F30%2FblogOfHexo%2F</url>
    <content type="text"><![CDATA[博客搭建教程 参考链接：https://smartbeng.github.io/2017/03/26/blogFinish/ 安装Node.js\Git。并在git上创建仓库：https://github.com/haohualiangshi/haohualiangshi.github.io，要求仓库名必须和用户名相同。即必须是userName.github.io;我的userName是haohualiangshi 安装Hexo工具 在任意盘创建Hexo文件（必须是Hexo文件命名）；在Hexo文件夹的父级打开git命令行；运行$ npm install -g hexo; 打开Hexo文件夹；运行hexo init 运行hexo g用来生成页面；运行heox s启动本地服务 hexo 常用命令 hexo new page &quot;pageName&quot;新建文件夹。自动生成在source目录下 hexo new &quot;postName&quot;新建md文件；在source下的_post目录下； hexo运行的命令生成的页面文件是放在public文件夹下；新建一个文件夹用来往github上推送本地的文件。eg:我本地新建的是.deploy文件夹；克隆仓库文件,在hexo目录下运行git clone https://github.com/haohualiangshi/haohualiangshi.github.io .deploy/storm.git.github.io或者打开storm.git.github.io文件夹直接执行复制指令 123456hexo cleanhexo generatecp -R public/* .deploy/storm.github.iogit add .git commit -m &quot;update&quot;git push origin master -u 将上边文件类型命名为.sh文件类型；点击之后自动完成写入的指令完成上传；代码的意思：清除缓存、生成静态文件、将静态文件中的所有文件复制到.deploy/storm.github.io文件夹下、完成git的添加上传； 关于主题的更换网上的文件比较多；我使用的是next主题；参考的教程http://theme-next.iissnan.com/getting-started.html]]></content>
      <categories>
        <category>搭建博客</category>
      </categories>
      <tags>
        <tag>tool</tag>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[markdown_and_typora]]></title>
    <url>%2F2017%2F06%2F29%2Fmarkdown-and-typora%2F</url>
    <content type="text"><![CDATA[Typora For Markdown语法typora编辑器使用指南Typora是一个功能强大的Markdown编辑器； 数学表达式使用$符号包裹tex命令，例如：$lim_{x \to \infty} \ exp(-x)=0$将产生如下表达式： $lim_{x \to \infty} \ exp(-x)=0$ 下标下标使用~包裹，例如：$H~2~O$将生成水的表达式（注意：要使用$包裹）$H~2~O$ 上标使用^包裹；例如：$y^2=4$将产生表达式:$y^2=4$ 插入表情使用:happy:输出高兴的表情:happy:，使用:sad:输入悲伤的表情，以此类推； 下划线用html的语法&lt;u&gt;underline&lt;/u&gt;将产生下划线underline 删除线使用~~包裹的文本将会具有删除的样式；例如：~~删除的文本~~将产生删除的文本样式 代码代码分为行内插入和代码块 行内插入代码：使用`包裹的内容将会以代码的形式显示 代码块：输入三个~或三个`号然以后回车就可以输入代码块；并且可以选择代码的语言 1var a=10; 强调使用两个*号或者两个_包裹的内容将会被强调。例如 12**使用两个*号强调内容**__使用两个下划线强调内容__ 将会输出 使用两个*号强调内容 使用两个下划线强调内容 Typroa推荐使用两个*号 斜体在标准的Markdown语法中，*和_包裹的内容会斜体显示；但是在GFM下划线一般用来分隔人名和代码变量名；因此推荐使用星号来包裹斜体内容。如果要显示星号需要\转义 1&lt;p&gt;\*你好。typora！*&lt;/p&gt; *你好。typora！* 你好。typora！ 插入图片我们可以采用拖拽的方式，将本地文件夹中的I图片或者网络上的图片插图 插入URL连接使用尖括号包裹的URL将产生一个连接；例如：&lt;http://www.baidu.com&gt;将产生连接: http://www.baidu.com;网址要写标准；否则可能不会显示 目录列表Table of Content(toc)输入[toc]然后回车，会产生一个目录，这个目录抽取了文章的所有标题；自动更新内容。(目录不能跨级；可能是造成页面生成目录失败的原因，下期验证) 水平分割线使用三个*或者三个-，然后回车，来产生水平分割线。 标注我们可以对某一词语进行标注。例如 12某些人用过了才知道[^1][^1]：这个是注释的内容 注释的编号需要相同 某些人用过了才知道^1 表格12345|姓名|性别|毕业院校|工资||:---|:---:|:---:|---:|(注意顿号的位置表示对齐方式)|洋洋|男|重庆交通大学|3200||峰哥|男|河南大学|4000||坑会|男|河南科技学院|3000| 将会产生 姓名 性别 毕业院校 工资 洋洋 男 重庆交通大学 3200 峰哥 男 河南大学 4000 坑会 男 河南科技学院 3000 数学表达式块输入两个美元符号；然后回车就可以输入数学表达式。例如： 1$$\mathbf&#123;V&#125;_1 \times \mathbf&#123;V&#125;_2 = \begin&#123;vmatrix&#125; \mathbf&#123;i&#125; &amp; \mathbf&#123;j&#125; &amp; \mathbf&#123;k&#125; \\\frac&#123;\partial X&#125;&#123;\partial u&#125; &amp; \frac&#123;\partial Y&#125;&#123;\partial u&#125; &amp; 0 \\\frac&#123;\partial X&#125;&#123;\partial v&#125; &amp; \frac&#123;\partial Y&#125;&#123;\partial v&#125; &amp; 0 \\\end&#123;vmatrix&#125;$$ $$\mathbf{V}_1 \times \mathbf{V}_2 = \begin{vmatrix} \mathbf{i} &amp; \mathbf{j} &amp; \mathbf{k} \\frac{\partial X}{\partial u} &amp; \frac{\partial Y}{\partial u} &amp; 0 \\frac{\partial X}{\partial v} &amp; \frac{\partial Y}{\partial v} &amp; 0 \\end{vmatrix}$$ 任务列表我们可以选择有没有完成；在[]中填入x表示完成；也可以通过点击选择完成或者没完成； -[ ]和-[x]两种方式 -[ ] 吃饭 列表输入+，-，*，创建无序的列表；使用任意字母开头创建有序的列表 1234**无序列表*** 你好- 二货+ 成功 无序列表 你好 二货 成功 nihao fsadf dfs fasdf 块引用使用&gt;来插入块引用。例如： 这个是块引用 标题是用#的个数表示标题;有6个标题]]></content>
      <categories>
        <category>搭建博客</category>
      </categories>
      <tags>
        <tag>tool</tag>
        <tag>markdown</tag>
        <tag>typora</tag>
      </tags>
  </entry>
</search>